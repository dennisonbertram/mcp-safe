/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockSafeProxyFactory,
  MockSafeProxyFactoryInterface,
} from "../MockSafeProxyFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
    ],
    name: "createProxy",
    outputs: [
      {
        internalType: "contract MockSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract MockSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "singleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516106c33803806106c383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161063961008a6000396000608d01526106396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631688f0b91461004657806361b69abd14610075578063b62654fb14610088575b600080fd5b610059610054366004610429565b6100af565b6040516001600160a01b03909116815260200160405180910390f35b610059610083366004610480565b61022a565b6100597f000000000000000000000000000000000000000000000000000000000000000081565b6000808380519060200120836040516020016100d5929190918252602082015260400190565b60405160208183030381529060405280519060200120905080856040516100fb9061035d565b6001600160a01b0390911681526020018190604051809103906000f590508015801561012b573d6000803e3d6000fd5b508451909250156101e2576000826001600160a01b03168560405161015091906104ce565b6000604051808303816000865af19150503d806000811461018d576040519150601f19603f3d011682016040523d82523d6000602084013e610192565b606091505b50509050806101e05760405162461bcd60e51b8152602060048201526015602482015274125b9a5d1a585b1a5e985d1a5bdb8819985a5b1959605a1b60448201526064015b60405180910390fd5b505b6040516001600160a01b0386811682528316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b6000826040516102399061035d565b6001600160a01b039091168152602001604051809103906000f080158015610265573d6000803e3d6000fd5b50825190915015610317576000816001600160a01b03168360405161028a91906104ce565b6000604051808303816000865af19150503d80600081146102c7576040519150601f19603f3d011682016040523d82523d6000602084013e6102cc565b606091505b50509050806103155760405162461bcd60e51b8152602060048201526015602482015274125b9a5d1a585b1a5e985d1a5bdb8819985a5b1959605a1b60448201526064016101d7565b505b6040516001600160a01b0384811682528216907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a292915050565b610106806104fe83390190565b80356001600160a01b038116811461038157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103ad57600080fd5b813567ffffffffffffffff808211156103c8576103c8610386565b604051601f8301601f19908116603f011681019082821181831017156103f0576103f0610386565b8160405283815286602085880101111561040957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561043e57600080fd5b6104478461036a565b9250602084013567ffffffffffffffff81111561046357600080fd5b61046f8682870161039c565b925050604084013590509250925092565b6000806040838503121561049357600080fd5b61049c8361036a565b9150602083013567ffffffffffffffff8111156104b857600080fd5b6104c48582860161039c565b9150509250929050565b6000825160005b818110156104ef57602081860181015185830152016104d5565b50600092019182525091905056fe60a060405234801561001057600080fd5b5060405161010638038061010683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051607e610088600039600060060152607e6000f3fe60806040527f00000000000000000000000000000000000000000000000000000000000000003660008037600080366000845af43d6000803e8080156043573d6000f35b3d6000fdfea2646970667358221220db8943d72feb07c650660f07af16ad4115e8d35e9d0d1ad22cca4bc5127d9a9864736f6c63430008130033a26469706673582212207ffa7525666655d3ebba56e43ccc9843c326e00b044d101bdae1e68310dcd8e564736f6c63430008130033";

type MockSafeProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSafeProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSafeProxyFactory__factory extends ContractFactory {
  constructor(...args: MockSafeProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _singleton: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_singleton, overrides || {});
  }
  override deploy(
    _singleton: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_singleton, overrides || {}) as Promise<
      MockSafeProxyFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockSafeProxyFactory__factory {
    return super.connect(runner) as MockSafeProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSafeProxyFactoryInterface {
    return new Interface(_abi) as MockSafeProxyFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockSafeProxyFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockSafeProxyFactory;
  }
}
